<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="31" failures="0" errors="0" time="1.391">
  <testsuite name="Auth Routes" errors="0" failures="0" skipped="0" timestamp="2023-11-20T02:07:35" time="0.589" tests="5">
    <testcase classname="Auth Routes POST /signup should create a new user successfully" name="Auth Routes POST /signup should create a new user successfully" time="0.018">
    </testcase>
    <testcase classname="Auth Routes POST /signup should return a 400 status for invalid signup data" name="Auth Routes POST /signup should return a 400 status for invalid signup data" time="0.001">
    </testcase>
    <testcase classname="Auth Routes POST /signup should handle errors during signup" name="Auth Routes POST /signup should handle errors during signup" time="0.002">
    </testcase>
    <testcase classname="Auth Routes POST /signin should sign in a user successfully" name="Auth Routes POST /signin should sign in a user successfully" time="0.001">
    </testcase>
    <testcase classname="Auth Routes POST /signin should handle errors during signin" name="Auth Routes POST /signin should handle errors during signin" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Basic Authentication Middleware" errors="0" failures="0" skipped="0" timestamp="2023-11-20T02:07:36" time="0.23" tests="5">
    <testcase classname="Basic Authentication Middleware authenticates valid credentials" name="Basic Authentication Middleware authenticates valid credentials" time="0.003">
    </testcase>
    <testcase classname="Basic Authentication Middleware rejects invalid username" name="Basic Authentication Middleware rejects invalid username" time="0">
    </testcase>
    <testcase classname="Basic Authentication Middleware rejects invalid password" name="Basic Authentication Middleware rejects invalid password" time="0.001">
    </testcase>
    <testcase classname="Basic Authentication Middleware handles requests without authorization header" name="Basic Authentication Middleware handles requests without authorization header" time="0">
    </testcase>
    <testcase classname="Basic Authentication Middleware handles errors during authentication" name="Basic Authentication Middleware handles errors during authentication" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Collection class" errors="0" failures="0" skipped="0" timestamp="2023-11-20T02:07:36" time="0.062" tests="14">
    <testcase classname="Collection class create method should successfully create a record" name="Collection class create method should successfully create a record" time="0.001">
    </testcase>
    <testcase classname="Collection class create method should handle errors in create method" name="Collection class create method should handle errors in create method" time="0.003">
    </testcase>
    <testcase classname="Collection class read method should successfully read a record by id" name="Collection class read method should successfully read a record by id" time="0.001">
    </testcase>
    <testcase classname="Collection class read method should successfully read all records" name="Collection class read method should successfully read all records" time="0">
    </testcase>
    <testcase classname="Collection class read method should handle errors in read method" name="Collection class read method should handle errors in read method" time="0">
    </testcase>
    <testcase classname="Collection class update method should successfully update a record" name="Collection class update method should successfully update a record" time="0">
    </testcase>
    <testcase classname="Collection class update method should handle record not found in update method" name="Collection class update method should handle record not found in update method" time="0">
    </testcase>
    <testcase classname="Collection class delete method should successfully delete a record" name="Collection class delete method should successfully delete a record" time="0.001">
    </testcase>
    <testcase classname="Collection class delete method should handle record not found or not deleted in delete method" name="Collection class delete method should handle record not found or not deleted in delete method" time="0">
    </testcase>
    <testcase classname="Collection class delete method should handle record not found or not deleted in delete method" name="Collection class delete method should handle record not found or not deleted in delete method" time="0">
    </testcase>
    <testcase classname="Collection class delete method should handle unexpected errors in delete method" name="Collection class delete method should handle unexpected errors in delete method" time="0">
    </testcase>
    <testcase classname="Collection class findOne method should successfully find a record" name="Collection class findOne method should successfully find a record" time="0.001">
    </testcase>
    <testcase classname="Collection class findOne method should handle errors in findOne method" name="Collection class findOne method should handle errors in findOne method" time="0">
    </testcase>
    <testcase classname="Collection class findOne method should successfully find a record with default options" name="Collection class findOne method should successfully find a record with default options" time="0">
    </testcase>
  </testsuite>
  <testsuite name="500 Error Handler" errors="0" failures="0" skipped="0" timestamp="2023-11-20T02:07:36" time="0.161" tests="1">
    <testcase classname="500 Error Handler should return 500 for a server error" name="500 Error Handler should return 500 for a server error" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="Server API" errors="0" failures="0" skipped="0" timestamp="2023-11-20T02:07:37" time="0.149" tests="4">
    <testcase classname="Server API Get / responds with status code 200 and message &quot;Hello World!&quot;" name="Server API Get / responds with status code 200 and message &quot;Hello World!&quot;" time="0.003">
    </testcase>
    <testcase classname="Server API Server starts on the correct PORT" name="Server API Server starts on the correct PORT" time="0.001">
    </testcase>
    <testcase classname="Server API Server logs the startup message" name="Server API Server logs the startup message" time="0">
    </testcase>
    <testcase classname="Server API Fallback to default port if process.env.PORT is not set" name="Server API Fallback to default port if process.env.PORT is not set" time="0">
    </testcase>
  </testsuite>
  <testsuite name="404 Not Found Handler" errors="0" failures="0" skipped="0" timestamp="2023-11-20T02:07:37" time="0.148" tests="2">
    <testcase classname="404 Not Found Handler should return 404 for an unknown GET route" name="404 Not Found Handler should return 404 for an unknown GET route" time="0.005">
    </testcase>
    <testcase classname="404 Not Found Handler should return 404 for an unknown POST route" name="404 Not Found Handler should return 404 for an unknown POST route" time="0.002">
    </testcase>
  </testsuite>
</testsuites>